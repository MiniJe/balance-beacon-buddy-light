version: '3.8'

services:
  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: balance-beacon-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
    ports:
      - "5000:5000"
    networks:
      - balance-beacon-network
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/temp:/app/temp
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: balance-beacon-frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - balance-beacon-network
    environment:
      - VITE_API_URL=http://backend:5000
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Database (doar dacă nu folosești Azure SQL)
  # database:
  #   image: mcr.microsoft.com/mssql/server:2019-latest
  #   container_name: balance-beacon-db
  #   restart: unless-stopped
  #   environment:
  #     - ACCEPT_EULA=Y
  #     - SA_PASSWORD=${DB_SA_PASSWORD}
  #     - MSSQL_PID=Express
  #   ports:
  #     - "1433:1433"
  #   volumes:
  #     - db_data:/var/opt/mssql
  #   networks:
  #     - balance-beacon-network

networks:
  balance-beacon-network:
    driver: bridge

volumes:
  db_data:
    driver: local
